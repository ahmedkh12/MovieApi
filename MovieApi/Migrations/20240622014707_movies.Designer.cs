// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieApi.Data;

#nullable disable

namespace MovieApi.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20240622014707_movies")]
    partial class movies
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MovieApi.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Movie1 Description",
                            Name = "Movie1"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Movie2 Description",
                            Name = "Movie2"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Movie3 Description",
                            Name = "Movie3"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Movie4 Description",
                            Name = "Movie4"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Movie5 Description",
                            Name = "Movie5"
                        });
                });

            modelBuilder.Entity("MovieApi.Models.Movie", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("genreid")
                        .HasColumnType("int");

                    b.Property<byte[]>("poster")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<double>("rate")
                        .HasColumnType("float");

                    b.Property<string>("storeline")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("year")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("genreid");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("MovieApi.Models.Movie", b =>
                {
                    b.HasOne("MovieApi.Models.Genre", "genre")
                        .WithMany()
                        .HasForeignKey("genreid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("genre");
                });
#pragma warning restore 612, 618
        }
    }
}
